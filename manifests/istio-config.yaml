kind: Service
apiVersion: v1
metadata:
  name: app-demo
  namespace: ${parameters.namespace}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path:  "/metrics"
spec:
  type: NodePort
  selector:
    source: demo
    app: spinnaker
  ports:
  - protocol: TCP
    name: http
    port: 80
    targetPort: 8000
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: app-demo-gateway
  namespace: ${parameters.namespace}
spec:
  selector:
    # Which pods we want to expose as Istio router
    # This label points to the default one installed from file istio-demo.yaml
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    # Here we specify which Kubernetes service names
    # we want to serve through this Gateway
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: app-demo
  namespace: ${parameters.namespace}
spec:
  host: app-demo
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
  - name: main
    labels:
      version: main
  - name: canary
    labels:
      version: canary
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: app-demo-virtual-service
  namespace: ${parameters.namespace}
spec:
  hosts:
  - "*"
  gateways:
  - spinnaker-demo-gateway
  http:
  - route:
    - destination:
        host: app-demo
        subset: main
      weight: 100
    - destination:
        host: app-demo
        subset: canary
      weight: 0
    match:
    - uri:
        exact: /page
    - uri:
        exact: /
